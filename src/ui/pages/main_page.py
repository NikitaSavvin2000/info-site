import os
import toml
import time
import asyncio
import gettext
import streamlit as st

from team_page import team_page
from PIL import Image, ImageDraw
from streamlit_option_menu import option_menu
from ui.pages.researches_page import show_articles


config_path = '.streamlit/config.toml'

config = toml.load(config_path)

font = config['theme']['font']


def round_corners(image_path, radius):
    img = Image.open(image_path).convert("RGBA")
    mask = Image.new("L", img.size, 0)
    draw = ImageDraw.Draw(mask)
    draw.rounded_rectangle((0, 0) + img.size, radius=radius, fill=255)
    img.putalpha(mask)
    return img


def stream_data(text):
    for word in text.split(" "):
        yield word + " "
        time.sleep(0.02)


def set_language(lang: str):
    locale_path = os.path.join(os.path.dirname(__file__), 'locale')
    translation = gettext.translation(
        domain="messages",
        localedir=locale_path,
        languages=[lang],
        fallback=True
    )
    translation.install()
    return translation.gettext


def show_content_level_0_container_0(st, _):
    st.write('# –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ üìà')
    st.markdown('---', unsafe_allow_html=True)
    images_col_left = st.columns(spec=[3, 2])
    images_col_right = st.columns(spec=[2, 3])

    simple_forecast_1 = "src/ui/images/simple_forecast_1.png"
    simple_forecast_1 = round_corners(simple_forecast_1, radius=50)

    simple_forecast_2 = "src/ui/images/simple_forecast.png"
    simple_forecast_2 = round_corners(simple_forecast_2, radius=50)

    analysis_page_1 = "src/ui/images/time_series_analysis.png"
    analysis_page_1 = round_corners(analysis_page_1, radius=50)

    analysis_page_2 = "src/ui/images/time_series_analysis_2.png"
    analysis_page_2 = round_corners(analysis_page_2, radius=50)

    grid_search_page = "src/ui/images/grid_search.png"
    grid_search_page = round_corners(grid_search_page, radius=50)

    analytics = "src/ui/images/dark_theme_no_text-Photoroom.png"
    analytics = round_corners(analytics, radius=50)

    adv_forecast_2 = "src/ui/images/adv_forecast_2.png"
    adv_forecast_2 = round_corners(adv_forecast_2, radius=50)

    adv_forecast_1 = "src/ui/images/adv_forecast_1.png"
    adv_forecast_1 = round_corners(adv_forecast_1, radius=50)

    images_col_left[0].image(simple_forecast_2, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    text_simple_forecast = _('–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑')
    images_col_left[1].success(f"##### üìä {text_simple_forecast}")
    text_simple_forecast_desc = _('–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ —Å–æ–∑–¥–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —É—Å–∏–ª–∏—è–º–∏. –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–∏–∑–æ–Ω—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞, –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç —Ä–∞—Å—á–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –º–æ–¥–µ–ª–∏, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –≤–∞–∂–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —É–¥–æ–±—Å—Ç–≤–æ, –∞ –≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º.')
    images_col_left[1].write(f'{text_simple_forecast_desc}')
    text_simple_forecast_2 = _('–î–µ–ª–∞–π –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏–≤ –¥–∞–Ω–Ω—ã–µ')
    images_col_left[1].write(f'{text_simple_forecast_2}')

    images_col_right[1].image(adv_forecast_1, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    title_text_learn_model = _('–û–±—É—á–∞–π —Å–≤–æ–∏ –º–æ–¥–µ–ª–∏')
    images_col_right[0].success(f"##### üìö {title_text_learn_model}")
    text_learn_model_desc = _('–†–∞–∑–¥–µ–ª –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—Å–ø–µ—á–∞—Ç –Ω–∞–∏–±–æ–ª—å—à—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –ø–æ–¥ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–∞–∂–µ –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ª–µ–≥–∫–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∞—Ç —Ä–∞–±–æ—Ç—É –º–æ–¥–µ–ª–∏, –¥–µ–ª–∞—è –ø—Ä–æ–≥–Ω–æ–∑ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≥–∏–±–∫–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –¥–∏–Ω–∞–º–∏—á–Ω—ã—Ö –∏ –∏–∑–º–µ–Ω—è—é—â–∏—Ö—Å—è —É—Å–ª–æ–≤–∏—è—Ö.')
    images_col_right[0].write(f'{text_learn_model_desc}')

    images_col_left = st.columns(spec=[3, 2])
    images_col_right = st.columns(spec=[2, 3])

    images_col_left[0].image(adv_forecast_2, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    text_simple_forecast = _('–û—Ü–µ–Ω–∏–≤–∞–π —Ç–æ—á–Ω–æ—Å—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ')
    images_col_left[1].success(f"##### üìä {text_simple_forecast}")
    text_simple_forecast_desc = _('–û—Ü–µ–Ω–∏–≤–∞–π —Ç–æ—á–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö –º–æ–¥–µ–ª–µ–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ')
    images_col_left[1].write(f'{text_simple_forecast_desc}')


def show_content_level_0_container_1(st, _):
    st.write('# –ê–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö üîç')
    st.markdown('---', unsafe_allow_html=True)
    images_col_left = st.columns(spec=[3, 2])
    images_col_right = st.columns(spec=[2, 3])

    simple_forecast_1 = "src/ui/images/simple_forecast_1.png"
    simple_forecast_1 = round_corners(simple_forecast_1, radius=50)

    simple_forecast_2 = "src/ui/images/simple_forecast.png"
    simple_forecast_2 = round_corners(simple_forecast_2, radius=50)

    analysis_page_1 = "src/ui/images/time_series_analysis.png"
    analysis_page_1 = round_corners(analysis_page_1, radius=50)

    analysis_page_2 = "src/ui/images/time_series_analysis_2.png"
    analysis_page_2 = round_corners(analysis_page_2, radius=50)

    grid_search_page = "src/ui/images/grid_search.png"
    grid_search_page = round_corners(grid_search_page, radius=50)

    analytics = "src/ui/images/dark_theme_no_text-Photoroom.png"
    analytics = round_corners(analytics, radius=50)

    analytics_screenshot_1 = "src/ui/images/analysis_screenshot1.png"
    analytics_screenshot_1 = round_corners(analytics_screenshot_1, radius=50)

    analytics_screenshot_2 = "src/ui/images/analysis_screenshot_2.png"
    analytics_screenshot_2 = round_corners(analytics_screenshot_2, radius=50)

    analytics_screenshot_3 = "src/ui/images/analysis_screenshot_3.png"
    analytics_screenshot_3 = round_corners(analytics_screenshot_3, radius=50)

    adv_forecast = "src/ui/images/adv_forecast_2.png"
    adv_forecast = round_corners(adv_forecast, radius=50)

    images_col_left[0].image(analytics_screenshot_1, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    text_simple_forecast = _('–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥')
    images_col_left[1].success(f"##### üìä {text_simple_forecast}")
    text_simple_forecast_desc = _('–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ —Å–æ–∑–¥–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —É—Å–∏–ª–∏—è–º–∏. –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–∏–∑–æ–Ω—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞, –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç —Ä–∞—Å—á–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –º–æ–¥–µ–ª–∏, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –≤–∞–∂–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —É–¥–æ–±—Å—Ç–≤–æ, –∞ –≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º.')
    images_col_left[1].write(f'{text_simple_forecast_desc}')
    text_simple_forecast_2 = _('–î–µ–ª–∞–π –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏–≤ –¥–∞–Ω–Ω—ã–µ')
    images_col_left[1].write(f'{text_simple_forecast_2}')


    images_col_right[1].image(analytics_screenshot_2, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    text_title_analysis = _('–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫')
    images_col_right[0].success(f"##### üîç {text_title_analysis}")
    text_analysis_desc = _('–†–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤, –≤—ã—è–≤–ª–µ–Ω–∏—è —Å–µ–∑–æ–Ω–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–µ–±–∞–Ω–∏–π. –≠—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –æ—Ü–µ–Ω–∏—Ç—å –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–æ—Å—Ç—å. –° –ø–æ–º–æ—â—å—é –º–æ—â–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –º–æ–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ –≤—ã—è–≤–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã, –Ω–æ –∏ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å —Å–∫—Ä—ã—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Å–µ–∑–æ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –±–∏–∑–Ω–µ—Å–µ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏. –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö ‚Äì —ç—Ç–æ –∫–ª—é—á –∫ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–º –≤—ã–≤–æ–¥–∞–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–µ—Å—É—Ä—Å–∞–º–∏.')
    images_col_right[0].write(f'{text_analysis_desc}')


    images_col_left = st.columns(spec=[3, 2])
    images_col_right = st.columns(spec=[2, 3])

    images_col_left[0].image(analytics_screenshot_3, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    title_text_learn_model = _('–ê–Ω–∞–ª–∏–∑ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–µ–π')
    images_col_left[1].success(f"##### üìö {title_text_learn_model}")
    text_learn_model_desc = _('–†–∞–∑–¥–µ–ª –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—Å–ø–µ—á–∞—Ç –Ω–∞–∏–±–æ–ª—å—à—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –ø–æ–¥ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–∞–∂–µ –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ª–µ–≥–∫–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∞—Ç —Ä–∞–±–æ—Ç—É –º–æ–¥–µ–ª–∏, –¥–µ–ª–∞—è –ø—Ä–æ–≥–Ω–æ–∑ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≥–∏–±–∫–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –¥–∏–Ω–∞–º–∏—á–Ω—ã—Ö –∏ –∏–∑–º–µ–Ω—è—é—â–∏—Ö—Å—è —É—Å–ª–æ–≤–∏—è—Ö.')
    images_col_left[1].write(f'{text_learn_model_desc}')


def show_content_level_0_container_2(st, _):
    st.write('# –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è —Ä–∏—Å–∫–æ–≤ üîç')
    st.markdown('---', unsafe_allow_html=True)
    images_col_left = st.columns(spec=[3, 2])
    images_col_right = st.columns(spec=[2, 3])

    simple_forecast_1 = "src/ui/images/simple_forecast_1.png"
    simple_forecast_1 = round_corners(simple_forecast_1, radius=50)

    simple_forecast_2 = "src/ui/images/simple_forecast.png"
    simple_forecast_2 = round_corners(simple_forecast_2, radius=50)

    analysis_page_1 = "src/ui/images/time_series_analysis.png"
    analysis_page_1 = round_corners(analysis_page_1, radius=50)

    analysis_page_2 = "src/ui/images/time_series_analysis_2.png"
    analysis_page_2 = round_corners(analysis_page_2, radius=50)

    grid_search_page = "src/ui/images/grid_search.png"
    grid_search_page = round_corners(grid_search_page, radius=50)

    analytics = "src/ui/images/dark_theme_no_text-Photoroom.png"
    analytics = round_corners(analytics, radius=50)

    adv_forecast = "src/ui/images/adv_forecast_2.png"
    adv_forecast = round_corners(adv_forecast, radius=50)

    images_col_left[0].image(simple_forecast_2, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    text_simple_forecast = _('–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑')
    images_col_left[1].success(f"##### üìä {text_simple_forecast}")
    text_simple_forecast_desc = _('–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ —Å–æ–∑–¥–∞–Ω –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —É—Å–∏–ª–∏—è–º–∏. –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –≤—ã–±—Ä–∞—Ç—å –≥–æ—Ä–∏–∑–æ–Ω—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞, –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç —Ä–∞—Å—á–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –º–æ–¥–µ–ª–∏, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π. –≠—Ç–æ—Ç –ø–æ–¥—Ö–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –≤–∞–∂–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —É–¥–æ–±—Å—Ç–≤–æ, –∞ –≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º.')
    images_col_left[1].write(f'{text_simple_forecast_desc}')
    text_simple_forecast_2 = _('–î–µ–ª–∞–π –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏–≤ –¥–∞–Ω–Ω—ã–µ')
    images_col_left[1].write(f'{text_simple_forecast_2}')


    images_col_right[1].image(analysis_page_1, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    text_title_analysis = _('–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö')
    images_col_right[0].success(f"##### üîç {text_title_analysis}")
    text_analysis_desc = _('–†–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤, –≤—ã—è–≤–ª–µ–Ω–∏—è —Å–µ–∑–æ–Ω–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–ª–µ–±–∞–Ω–∏–π. –≠—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –æ—Ü–µ–Ω–∏—Ç—å –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º–æ—Å—Ç—å. –° –ø–æ–º–æ—â—å—é –º–æ—â–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –º–æ–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ –≤—ã—è–≤–∏—Ç—å —Ç—Ä–µ–Ω–¥—ã, –Ω–æ –∏ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å —Å–∫—Ä—ã—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ —Å–µ–∑–æ–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –≤ –±–∏–∑–Ω–µ—Å–µ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏. –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö ‚Äì —ç—Ç–æ –∫–ª—é—á –∫ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–º –≤—ã–≤–æ–¥–∞–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ä–µ—Å—É—Ä—Å–∞–º–∏.')
    images_col_right[0].write(f'{text_analysis_desc}')


    images_col_left = st.columns(spec=[3, 2])
    images_col_right = st.columns(spec=[2, 3])

    images_col_left[0].image(adv_forecast, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    title_text_learn_model = _('–û–±—É—á–∞–π —Å–≤–æ–∏ –º–æ–¥–µ–ª–∏')
    images_col_left[1].success(f"##### üìö {title_text_learn_model}")
    text_learn_model_desc = _('–†–∞–∑–¥–µ–ª –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–µ—Å–ø–µ—á–∞—Ç –Ω–∞–∏–±–æ–ª—å—à—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –ø–æ–¥ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–∞–∂–µ –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ª–µ–≥–∫–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–ª—É—á—à–∞—Ç —Ä–∞–±–æ—Ç—É –º–æ–¥–µ–ª–∏, –¥–µ–ª–∞—è –ø—Ä–æ–≥–Ω–æ–∑ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º. –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≥–∏–±–∫–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –¥–∏–Ω–∞–º–∏—á–Ω—ã—Ö –∏ –∏–∑–º–µ–Ω—è—é—â–∏—Ö—Å—è —É—Å–ª–æ–≤–∏—è—Ö.')
    images_col_left[1].write(f'{text_learn_model_desc}')

    images_col_right[1].image(analytics, use_container_width=True, caption="–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")

    title_text_predict = _('–í—Å–µ–≥–¥–∞ –±—É–¥—å –≤ –∫—É—Ä—Å–µ –ø—Ä–æ–≥–Ω–æ–∑–∞')
    images_col_right[0].success(f"##### üíª {title_text_predict}")
    text_predict_decs = _('–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥–Ω–æ–∑–∞—Ö –ø—Ä—è–º–æ –Ω–∞ –ø–æ—á—Ç—É –∏–ª–∏ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (—Ç—Ä–µ—à—Ö–æ–ª–¥—ã), –∫–æ—Ç–æ—Ä—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤—è—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∞–Ω–æ–º–∞–ª–∏—è—Ö –≤ –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∏—Å–∫–∏. –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–æ—Ü–µ—Å—Å–æ–º, –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã—è–≤–ª—è—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–µ—Ä—ã, —á—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏.')
    images_col_right[0].write(f'{text_predict_decs}')

st.set_page_config(
    page_title="–ë–µ–∑ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏",
    initial_sidebar_state="collapsed",
    layout="wide",
)

hide_sidebar_style = """
    <style>
        [data-testid="collapsedControl"] {
            display: none;
        }
    </style>
"""
st.markdown(hide_sidebar_style, unsafe_allow_html=True)


async def main():

    st.session_state.setdefault('language', 'ru')
    st.session_state.setdefault('language_show', 'üá∑üá∫ RU')
    st.session_state.setdefault('content_container', None)


    cols = st.columns(spec=[1, 10, 1])
    gap = 1
    cols[2].markdown(
        f"""
                    <div style="height: {gap}px;"></div>
                    """,
        unsafe_allow_html=True
    )

    popover_lang = cols[2].popover(st.session_state.language_show, use_container_width=True)
    with popover_lang:
        if st.button('ru'):
            st.session_state.language = 'ru'
            st.session_state.language_show = 'üá∑üá∫ RU'
            st.rerun()
        if st.button('en'):
            st.session_state.language = 'en'
            st.session_state.language_show = 'üá∫üá∏ EN'
            st.rerun()

    _ = set_language(st.session_state.language)

    st.session_state.setdefault('cur_show_page', _('–ì–ª–∞–≤–Ω–∞—è'))

    with cols[1]:
        # cur_show_page = option_menu(
        #     None,
        #     [_('–ì–ª–∞–≤–Ω–∞—è'), _('–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è'), _('–ö–æ–º–∞–Ω–¥–∞'),],
        #
        #     icons=['house-door', 'search', 'people'],
        #     menu_icon="cast",
        #     default_index=0,
        #     orientation="horizontal",
        #     key="sidebar_menu",
        # )

        option_map = {
            0: _('–ì–ª–∞–≤–Ω–∞—è'),
            1: _('–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è'),
            2: _('–ö–æ–º–∞–Ω–¥–∞'),
        }
        option = st.segmented_control(
            None,
            options=option_map.keys(),
            format_func=lambda option: option_map[option],
            selection_mode="single",
        )
        if option is not None:
            cur_show_page = option_map[option]
        else:
            cur_show_page = option_map[0]

    if cur_show_page != st.session_state.cur_show_page:
        st.session_state.content_container = None
        st.session_state.cur_show_page = cur_show_page

    back_buttom = '–ù–∞–∑–∞–¥'
    if st.session_state.content_container == 'level_0_container_0':
        gap = 1
        cols[0].markdown(
            f"""
                <div style="height: {gap}px;"></div>
                """,
            unsafe_allow_html=True
        )
        if cols[0].button(back_buttom, type='primary', key='back_level_0_container_0', use_container_width=True):
            st.session_state.content_container = None
            st.rerun()
        show_content_level_0_container_0(st, _)
    elif st.session_state.content_container == 'level_0_container_1':
        gap = 1
        cols[0].markdown(
            f"""
                    <div style="height: {gap}px;"></div>
                    """,
            unsafe_allow_html=True
        )
        if cols[0].button(back_buttom, type='primary', key='back_level_0_container_1', use_container_width=True):
            st.session_state.content_container = None
            st.rerun()
        show_content_level_0_container_1(st, _)
    elif st.session_state.content_container == 'level_0_container_2':
        gap = 1
        cols[0].markdown(
            f"""
                    <div style="height: {gap}px;"></div>
                    """,
            unsafe_allow_html=True
        )
        if cols[0].button(back_buttom, type='primary', key='back_level_0_container_2', use_container_width=True):
            st.session_state.content_container = None
            st.rerun()
        show_content_level_0_container_2(st, _)
    elif st.session_state.cur_show_page == _('–ö–æ–º–∞–Ω–¥–∞'):
        team_page()
    elif st.session_state.cur_show_page == _('–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è'):
        show_articles()
    elif st.session_state.cur_show_page == _('–ì–ª–∞–≤–Ω–∞—è'):

        with st.container(height=700, border=False):
            st.title('PowerPrognoz')
            title_text = _('PowerPrognoz - –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è')
            st.write(f'### {title_text}')

            gap = 150

            st.markdown(
                """
                <style>
                    .st-emotion-cache-1jicfl2 {
                        width: 100%;
                        padding: 2rem 4rem 1rem; /* –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã */
                        min-width: auto;
                        max-width: initial;
                    }
                </style>
                """,
                unsafe_allow_html=True
            )

            # st.markdown(
            #     """
            #     <style>
            #     .st-emotion-cache-1ibsh2c {
            #         padding-top: 0 ; /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Ä—Ö–Ω–∏–π –ø–∞–¥–¥–∏–Ω–≥ –≤ 0 */
            #     }
            #     </style>
            #     """,
            #     unsafe_allow_html=True
            # )


            st.title("Advanced Modeling")
            st.write("""
            –í –æ—Å–Ω–æ–≤–µ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã –ª–µ–∂–∏—Ç —É–±–µ–∂–¥–µ–Ω–∏–µ, —á—Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ª—É—á—à–µ –≤—Å–µ–≥–æ —Ä–µ—à–∞—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –ò–ò, –¥—Ä—É–≥–∏–µ ‚Äî —Å –ø–æ–º–æ—â—å—é –ª–∏–Ω–µ–π–Ω–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ç–µ–∫—É—â–∏–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º, –∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∑–∞–¥–∞—á –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≥–¥–µ-—Ç–æ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ.
            """)



            st.markdown(
                f"""
                <div style="height: {gap}px;"></div>
                """,
                unsafe_allow_html=True
            )
            text_header = _('–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–π—Ç–µ –±—É–¥—É—â–µ–µ, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –¥–∞–Ω–Ω—ã—Ö')
            text_header = f'### {text_header}'
            st.write_stream(stream_data(text_header))

            text_dexc = _('–ù–∞—à –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—â–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å –æ—Å–æ–±—ã–º –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä. –û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å —ç–Ω–µ—Ä–≥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –ø–æ–≤—ã—à–∞—Ç—å —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å —ç–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º. –ë–ª–∞–≥–æ–¥–∞—Ä—è –≥–ª—É–±–æ–∫–æ–º—É –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Ç–∞–∫–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö, –º–µ–¥–∏—Ü–∏–Ω–µ –∏ –±–∏–∑–Ω–µ—Å–µ, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—è —É–ª—É—á—à–µ–Ω–∏—é –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—Ç—Ä–∞—Å–ª—è—Ö.')
            text_dexc = f'##### {text_dexc}'
            st.write_stream(stream_data(text_dexc))

        cols = st.columns(3)
        font_size = "30px"
        font_style = font
        gap = 0
        height = 620
        height_image = 190
        width_image_col = 5
        text = 'text '*120

        with cols[1].container(height=height, border=True):
            col_0_title = '–ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ'

            cols_image = st.columns(spec=[1,width_image_col,1])
            with cols_image[1].container(height=height_image, border=False):
                image_path = 'src/ui/images/238-2383266_line-graph-png-transparent-line-graph-png.png'
                st.image(image_path, use_container_width=True)

            st.markdown(
                f"""
                <div style="text-align: center; margin: 0 auto;">
                    <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{col_0_title}</span>
                </div>
                """,
                unsafe_allow_html=True
            )
            st.markdown(
                f"""
                <div style="height: {gap}px;"></div>
                """,
                unsafe_allow_html=True
            )
            st.write(text)
            if st.button('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', type='primary', use_container_width=True, key='1'):
                st.session_state.content_container = 'level_0_container_0'
                st.rerun()

        with cols[0].container(height=height, border=True):

            cols_image = st.columns(spec=[1,width_image_col,1])
            with cols_image[1].container(height=height_image, border=False):
                image_path = 'src/ui/images/pngwing2.com.png'
                st.image(image_path, use_container_width=True)

            col_1_title = '–ê–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö'
            st.markdown(
                f"""
                <div style="text-align: center; margin: 0 auto;">
                    <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{col_1_title}</span>
                </div>
                """,
                unsafe_allow_html=True
            )
            st.markdown(
                f"""
                <div style="height: {gap}px;"></div>
                """,
                unsafe_allow_html=True
            )
            st.write(text)
            if st.button('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', type='primary', use_container_width=True, key='2'):
                st.session_state.content_container = 'level_0_container_1'
                st.rerun()

        with cols[2].container(height=height, border=True):
            cols_image = st.columns(spec=[1,width_image_col,1])
            with cols_image[1].container(height=height_image, border=False):
                image_path = 'src/ui/images/pngwing.com.png'
                st.image(image_path, use_container_width=True)

            col_2_title = '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤'
            st.markdown(
                f"""
                <div style="text-align: center; margin: 0 auto;">
                    <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{col_2_title}</span>
                </div>
                """,
                unsafe_allow_html=True
            )
            st.markdown(
                f"""
                <div style="height: {gap}px;"></div>
                """,
                unsafe_allow_html=True
            )
            st.write(text)
            if st.button('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', type='primary', use_container_width=True, key='3'):
                st.session_state.content_container = 'level_0_container_2'
                st.rerun()

        gap = 100
        st.markdown(
            f"""
            <div style="height: {gap}px;"></div>
            """,
            unsafe_allow_html=True
        )

        with st.container(height=250, border=False):
            title_mid = '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞—à–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∞'
            st.markdown(
                f"""
                <div style="font-family: {font}; text-align: center; font-size: 60px; margin: 0 auto;">
                    <h1>{title_mid}</h1>
                </div>
                """,
                unsafe_allow_html=True
            )

        cols = st.columns(2)
        font_size = "25px"
        font_style = font
        height = 200
        cont_face_text = 100
        text = 'text ' * cont_face_text



        with cols[0].container(height=height, border=True):
            line_0_col_0_title = '‚ö° –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è —Ä–∏—Å–∫–æ–≤'
            st.markdown(
                f"""
                <div style="text-align: center; margin: 0 auto;">
                    <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{line_0_col_0_title}</span>
                </div>
                """,
                unsafe_allow_html=True
            )
            st.write(text)
        with cols[1].container(height=height, border=True):
            line_0_col_1_title = 'üß† –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π'
            st.markdown(
                f"""
                <div style="text-align: center; margin: 0 auto;">
                    <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{line_0_col_1_title}</span>
                </div>
                """,
                unsafe_allow_html=True
            )
            st.write(text)

        with cols[0].container(height=height, border=True):
            line_1_col_0_title = 'üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è'
            st.markdown(
                f"""
                <div style="text-align: center; margin: 0 auto;">
                    <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{line_1_col_0_title}</span>
                </div>
                """,
                unsafe_allow_html=True
            )
            st.write(text)
        with cols[1].container(height=height, border=True):
            line_1_col_1_title = 'üîß –ì–∏–±–∫–æ—Å—Ç—å –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å'
            st.markdown(
                f"""
                <div style="text-align: center; margin: 0 auto;">
                    <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{line_1_col_1_title}</span>
                </div>
                """,
                unsafe_allow_html=True
            )
            st.write(text)

        with cols[0].container(height=height, border=True):
            line_1_col_0_title = '‚è≥ –°–Ω–∏–∂–µ–Ω–∏–µ –∑–∞—Ç—Ä–∞—Ç'
            st.markdown(
                f"""
                    <div style="text-align: center; margin: 0 auto;">
                        <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{line_1_col_0_title}</span>
                    </div>
                    """,
                unsafe_allow_html=True
            )
            st.write(text)
        with cols[1].container(height=height, border=True):
            line_1_col_1_title = '‚ú® –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å'
            st.markdown(
                f"""
                    <div style="text-align: center; margin: 0 auto;">
                        <span style="font-family: {font}; font-size: {font_size}; font-weight: {font_style};">{line_1_col_1_title}</span>
                    </div>
                    """,
                unsafe_allow_html=True
            )
            st.write(text)

    st.markdown("---")
    gap = 20
    st.markdown(
        f"""
                <div style="height: {gap}px;"></div>
                """,
        unsafe_allow_html=True
    )

    with st.container(height=200, border=False):
        title_mid = '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∞–º–∏!'
        st.markdown(
            f"""
                    <div style="font-family: {font}; text-align: center; font-size: 60px; margin: 0 auto;">
                        <h1>{title_mid}</h1>
                    </div>
                    """,
            unsafe_allow_html=True
        )
        gap = 40
        st.markdown(
            f"""
                        <div style="height: {gap}px;"></div>
                        """,
            unsafe_allow_html=True
        )
        cols = st.columns(3)
        link_button_text = _('–¢–æ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —É –≤–∞—Å')
        cols[1].link_button(label=link_button_text, url='http://77.37.136.11:8501', help=None, type="primary",  disabled=False, use_container_width=True)

    st.markdown("---")
    st.write(' ')
    text_contact = _('–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:')
    st.markdown(f"### {text_contact}")
    text_question = _('–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:')
    text_phone = _('–¢–µ–ª–µ—Ñ–æ–Ω:')
    text_site = _('–í–µ–±-—Å–∞–π—Ç:')
    st.write(f"""
    {text_question}
    üìß Email: support@forecastingtool.com
    üìû {text_phone} +7 (915) 548-88-52
    üåê {text_site} [forecastingtool.com](http://77.37.136.11:8501)
    """)

    st.markdown("---")
    text_last = _('2025 PowerPrognoz. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.')
    st.markdown(f"¬© {text_last}")


if __name__ == "__main__":
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        pass
    finally:
        loop.close()
